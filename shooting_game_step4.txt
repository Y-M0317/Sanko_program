int my_machinex;          //自機のx座標位置
int my_bulx, my_buly;     //弾丸のx座標位置
int enemyx, enemyy;       //敵機の座標位置
int e_HP;                 //敵機の耐久度
boolean fire;             //弾丸の射出管理

void setup(){
  size(480, 480);
  my_machinex = width/2 - 25;
      my_bulx = my_machinex + 25;
      my_buly = 400;
       enemyx = 140;
       enemyy = 30;
         e_HP = 1;
         fire = false;
}

void draw(){
  background(0);
  ellipse(my_bulx, my_buly, 25, 25);  //弾丸の作成
  rect(enemyx, enemyy, 200, 100); //敵機だと思いましょう。
  rect(my_machinex, 375, 50, 50); //自機です。
  text("EnemyLife:" + e_HP, 50, 50);
  
  //ここから自機の操作
  if(keyPressed){
    if(key == CODED){
      if(keyCode == LEFT && my_machinex > 0){
        my_machinex -= 1;
        if(fire != true)
            my_bulx -= 1;
      }else if(keyCode == RIGHT && my_machinex < width - 50){
        my_machinex += 1;
        if(fire != true)
            my_bulx += 1;
      }
    }else if(key == ' '){
      fire = true;
    }
  }
  
  //敵機との当たり判定
  if(enemyx <= my_bulx && enemyx + 200 >= my_bulx && my_buly >= enemyy && my_buly <= enemyy + 100){
    e_HP--;
  }
  
  //弾丸射出管理
  if(fire == true){
    my_buly -= 1;
  }
  
  //初期化の設定
  if(my_buly == 0 || (enemyx < my_bulx && enemyx + 200 > my_bulx && my_buly > enemyy && my_buly < enemyy + 100)){
    my_bulx = my_machinex + 25;
    my_buly = 400;
    fire = false;
  }
  
  //相手のHPを減らした時の処理
  if(e_HP == 0){
    fill(255);
    textAlign(CENTER, CENTER);
    text("Game Clear!!", width/2, height/2);
  }
}