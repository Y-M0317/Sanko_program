int my_machinex;          //自機のx座標位置
int my_bulx, my_buly;     //弾丸のx座標位置
int enemyx, enemyy;       //敵機の座標位置
int e_HP;                 //敵機の耐久度
boolean fire;             //弾丸の射出管理

void setup() {
  size(480, 480);
  my_machinex = width/2 - 25;
  my_bulx = my_machinex + 25;
  my_buly = 400;
  enemyx = 140;
  enemyy = 30;
  e_HP = 1;
}

void draw() {
  background(0);
  //上の変数を代入して以下のものを作成しましょう。(Step1)
  //弾丸
  //敵機
  //自機
  //敵のライフ表示
  
  //ここから自機の操作を記入(Step2)
  if(){ //キーが押された
    if(){ //キーとしてコードが押された
      if(){ //"コードとして左が押された" かつ "自機のx座標が0より大きい"
        //自機を左に移動させる
        if(){ //弾丸が発射されていない
          //弾丸の移動
        }else if(){ //"コードとして右が押された" かつ "自機のx座標がwidth-50より小さい"
        //自機を右に移動させる
        if(){ //弾丸が発射されていない
          //弾丸の移動
          }
        }else if(){//スペースキーが押された(Step3)
          //弾丸が発射される(Step3)
        }
      }
    }
  }
  //ここまで(Step2)
  
  //ここから弾丸の射出の制御を記入(Step3)
  if(){//弾丸が発射されたら
    //弾丸の移動をさせる
  }
  //ここまで(Step3)
  
  //ここから弾丸と敵機との当たり判定及び初期化の設定(Step4)
  if(){//敵機の領域に弾丸が入ったら
    //敵のHPを1減らす
  }
  
  if(){//"自機の位置がwindowの一番上に行く" または "敵に当たった" ら
    //弾丸のx座標を初期値に戻す
    //弾丸のy座標を初期値に戻す
    //弾丸の発射を初期値に戻す
  }
  
  if(){//敵のHPが 0 になったら
  //文字の色を"白"にする
  //文字配置は縦横中心に
  //"Game Clear!!"と中央に表示する。
  }
  //ここまで(Step4)
}
